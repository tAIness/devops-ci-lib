name: Apply Snyk ignores (org defaults + overlay)
description: Builds .snyk from embedded default CSV and optional repo overlay.
inputs:
  snyk_token:
    description: Snyk auth token
    required: true
  overlay_csv_path:
    description: Optional repo-local overlay CSV path (e.g., .snyk-ignores.csv)
    required: false
  fail_if_missing:
    description: Fail if no CSV found anywhere
    default: "false"
runs:
  using: "composite"
  steps:
    - name: Install Snyk CLI
      uses: snyk/actions/setup@v4

    - name: Generate .snyk
      shell: bash
      env:
        SNYK_TOKEN: ${{ inputs.snyk_token }}
      run: |
        set -euo pipefail
        rm -f .snyk || true

        DEFAULT="${{ github.action_path }}/defaults/.snyk-ignores.csv"

        apply_csv () {
          local file="$1"
          [[ -f "$file" ]] || return 0
          echo "Applying ignores from $file"
          # ISSUE_ID[,expiry][,reason] (ignore blank/comments)
          while IFS=, read -r id expiry reason; do
            id="$(echo "${id:-}" | xargs)"
            [[ -z "$id" || "$id" =~ ^# ]] && continue
            expiry="$(echo "${expiry:-}" | xargs)"
            reason="$(echo "${reason:-}" | xargs)"
            args=(--id="$id" --yes)
            [[ -n "$expiry" ]] && args+=(--expiry="$expiry")
            [[ -n "$reason" ]] && args+=(--reason="$reason")
            snyk ignore "${args[@]}" || true
          done < "$file"
        }

        if [[ -f "$DEFAULT" ]]; then
          apply_csv "$DEFAULT"
        else
          if [[ "${{ inputs.fail_if_missing }}" == "true" ]]; then
            echo "::error::Missing embedded default CSV"; exit 1
          fi
          printf '{"version":"v1.25.0","ignore":{}}' > .snyk
          echo "::notice::No default CSV; created empty .snyk"
        fi

        if [[ -n "${{ inputs.overlay_csv_path }}" && -f "${{ inputs.overlay_csv_path }}" ]]; then
          apply_csv "${{ inputs.overlay_csv_path }}"
        fi

        echo "=== Final .snyk ==="
        cat .snyk
