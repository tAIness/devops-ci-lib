name: Docker release
on:
  workflow_call:
    inputs:
      registry:    { type: string, default: "docker.io" }
      builds_json: { type: string, required: true }
    secrets:
      DOCKERHUB_USERNAME: { required: true }
      DOCKERHUB_TOKEN:    { required: true }

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(inputs.builds_json) }}
    env:
      REGISTRY: ${{ inputs.registry }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image_suffix }}
          tags: |
            type=ref,event=tag
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ matrix.image_suffix }}
      - id: buildpush
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/${{ matrix.dockerfile }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - id: digest
        run: |
          echo "digest=${{ steps.buildpush.outputs.digest }}" >> $GITHUB_OUTPUT
          echo "image=${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image_suffix }}" >> $GITHUB_OUTPUT
      - name: Write image ref (for scans)
        run: echo "${{ steps.digest.outputs.image }}@${{ steps.digest.outputs.digest }}" > image-${{ matrix.name }}.txt
      - uses: actions/upload-artifact@v4
        with: { name: images-to-scan, path: image-${{ matrix.name }}.txt }
      - uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ steps.digest.outputs.image }}
          subject-digest: ${{ steps.digest.outputs.digest }}
          push-to-registry: false
        continue-on-error: true
      - uses: anchore/sbom-action@v0
        with:
          image: ${{ steps.digest.outputs.image }}@${{ steps.digest.outputs.digest }}
          format: spdx-json
          artifact-name: sbom-${{ matrix.name }}-${{ github.sha }}.spdx.json
          upload-artifact: true
