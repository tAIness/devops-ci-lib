name: Reusable - Snyk container scan with ignores

on:
  workflow_call:
    inputs:
      images:
        description: "Newline-separated image refs to scan"
        type: string
        required: true
      ignore_file:
        description: "Path (in caller repo) with Snyk ISSUE IDs (one per line) to ignore"
        type: string
        required: false
        default: ""
    secrets:
      snyk_token:
        required: true
      dockerhub_username:
        required: false
      dockerhub_token:
        required: false
      nexus_registry:
        required: false
      nexus_username:
        required: false
      nexus_password:
        required: false

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      # Checkout the CALLER repo so we can access ignore_file
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}

      - name: Login to Docker Hub (if creds provided)
        if: secrets.dockerhub_username && secrets.dockerhub_token
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}

      - name: Login to Nexus (if creds provided)
        if: secrets.nexus_registry && secrets.nexus_username && secrets.nexus_password
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.nexus_registry }}
          username: ${{ secrets.nexus_username }}
          password: ${{ secrets.nexus_password }}

      - name: Set up Snyk
        uses: snyk/actions/setup@v4

      - name: Auth Snyk
        run: snyk auth "${{ secrets.snyk_token }}"

      - name: Prime ignore list (optional)
        shell: bash
        run: |
          if [ -n "${{ inputs.ignore_file }}" ] && [ -f "${{ inputs.ignore_file }}" ]; then
            echo "Applying ignores from ${{ inputs.ignore_file }}"
            while IFS= read -r id; do
              id="${id%%#*}"; id="$(echo "$id" | xargs)"
              [ -z "$id" ] && continue
              echo "Ignoring $id"
              snyk ignore --id="$id" --reason="policy file" --expiry='3000-01-01'
            done < "${{ inputs.ignore_file }}"
          else
            echo "No ignore file applied."
          fi

      - name: Scan images (fail on high+)
        shell: bash
        run: |
          set -e
          while IFS= read -r img; do
            img="$(echo "$img" | xargs)"
            [ -z "$img" ] && continue
            echo "---- Snyk scanning: $img ----"
            snyk container test "$img" --severity-threshold=high || exit 1
          done <<< "${{ inputs.images }}"
